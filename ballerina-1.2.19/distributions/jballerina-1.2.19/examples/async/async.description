// Async functionality in Ballerina is a way to execute operations in an asynchronous manner by returning a `future`.
// The `future` can be used to extract the result of the async function call (if available), check the running status of an execution,
// or cancel the operation if needed. You can wait for a future to complete using the `wait` action.

// The `wait` action waits for one or more futures to complete and makes their return value available including any raised errors. If a future that is waited for panics, then `wait` will also panic.
// The `wait` action currently supports two semantics: wait for any and wait for all.
// Wait for any action will wait for any one of the given futures to complete. The value returned by the future that finishes first will be taken as the result.
// Wait for all action will wait for all the given futures to complete. The resulting value will contain the returned values from each future either as a record or map.
